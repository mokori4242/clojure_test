; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Connecting ...
; Reading port file: file:///Users/matsumotokazuyuki/Desktop/clojure_test/.nrepl-port ...
; Using host:port localhost:50675 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉test.core꞉>  ; Use `alt+enter` to evaluate
clj꞉test.core꞉> 
Hello World
nil
clj꞉user꞉> 
Hello World
nil
clj꞉user꞉> 
Hello World
nil
clj꞉user꞉> 
Hello World
nil
clj꞉user꞉> 
nil
clj꞉user꞉> 
nil
clj꞉user꞉> 
nil
clj꞉user꞉> 
nil
clj꞉user꞉> 
nil
clj꞉user꞉> 
nil
clj꞉user꞉> 
nil
clj꞉user꞉> 
nil
clj꞉user꞉> 
; Connecting using "Generic" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
;
; Connecting ...
; Reading port file: file:///Users/matsumotokazuyuki/Desktop/clojure_test/.nrepl-port ...
; Using host:port localhost:50675 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉test.core꞉>  ; Use `alt+enter` to evaluate
clj꞉test.core꞉> 
Hello World
nil
clj꞉user꞉> 
Hello World
nil
clj꞉user꞉> 
42
clj꞉user꞉> 
